name: Build and publish wheels

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  id-token: write # needed for PyPI Trusted Publishing (OIDC)

env:
  ISLPY_VERSION: "2025.2.5"

jobs:
  build:
    name: Build (${{ matrix.os }}, py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macOS 13 = Intel; macOS 14 = Apple Silicon
        os: [ubuntu-24.04, macos-13, macos-14]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential \
            autoconf automake libtool pkg-config \
            curl git cmake ninja-build

      - name: Install system deps (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update || true
          brew install autoconf automake libtool pkg-config cmake ninja || true

      - name: Upgrade pip and install Python build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build wheel delocate auditwheel

      - name: Build wheels using scripts/build_all.sh
        env:
          PYTHON_BIN: python
          ISLPY_VERSION: ${{ env.ISLPY_VERSION }}
          NPROCS: "4"
        run: |
          bash scripts/build_all.sh

      - name: Show built artifacts
        run: |
          find build -maxdepth 3 -type f -name "*.whl" -print

      - name: Upload wheelhouse
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-py${{ matrix.python-version }}
          path: |
            build/wheelhouse-repaired/*.whl
            build/wheelhouse/*.whl
          if-no-files-found: error

  publish:
    name: Publish to PyPI
    needs: [build]
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/p/islpy-barvinok
    permissions:
      contents: read
      id-token: write # OIDC for Trusted Publishing

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Flatten artifacts to dist/
        run: |
          mkdir -p dist-flat
          find dist -type f -name "*.whl" -exec cp {} dist-flat/ \;
          ls -l dist-flat

      # If you prefer API tokens instead of Trusted Publishing, set
      # PYPI_API_TOKEN in repo secrets and add:
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist-flat
